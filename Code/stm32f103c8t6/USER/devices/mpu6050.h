/*
 * mpu6050.h
 *	
 * 	Note: 该实现为单例模式
 *  Created on: 2024年7月30日
 *      Author: Rev_RoastDuck
 */

#ifndef DEVICE_MPU6050_H_
#define DEVICE_MPU6050_H_

/******************************************************************************/
/*---------------------------------头文件引入---------------------------------*/
/******************************************************************************/
#include "stm32f10x.h"
#include "soft_i2c.h"
#include "debug_uart.h"
#include "delay.h"

/******************************************************************************/
/*-----------------------------------配置层-----------------------------------*/
/******************************************************************************/
#define MPU6050_IIC_PORT            (GPIOA)                                   // 软件 IIC GPIO
#define MPU6050_SCL_PIN             (GPIO_Pin_5)                              // 软件 IIC SCL 引脚 
#define MPU6050_SDA_PIN             (GPIO_Pin_4)                              // 软件 IIC SDA 引脚 

#define MPU6050_ACC_SAMPLE          (0x10)                                    // 加速度计量程
// 设置为:0x00 陀螺仪量程为:±250 dps     获取到的陀螺仪数据除以131.2         可以转化为带物理单位的数据，单位为：°/s
// 设置为:0x08 陀螺仪量程为:±500 dps     获取到的陀螺仪数据除以65.6          可以转化为带物理单位的数据，单位为：°/s
// 设置为:0x10 陀螺仪量程为:±1000dps     获取到的陀螺仪数据除以32.8          可以转化为带物理单位的数据，单位为：°/s
// 设置为:0x18 陀螺仪量程为:±2000dps     获取到的陀螺仪数据除以16.4          可以转化为带物理单位的数据，单位为：°/s

#define MPU6050_GYR_SAMPLE          (0x18)                                    // 陀螺仪量程
// 设置为:0x00 陀螺仪量程为:±250 dps     获取到的陀螺仪数据除以131.2         可以转化为带物理单位的数据，单位为：°/s
// 设置为:0x08 陀螺仪量程为:±500 dps     获取到的陀螺仪数据除以65.6          可以转化为带物理单位的数据，单位为：°/s
// 设置为:0x10 陀螺仪量程为:±1000dps     获取到的陀螺仪数据除以32.8          可以转化为带物理单位的数据，单位为：°/s
// 设置为:0x18 陀螺仪量程为:±2000dps     获取到的陀螺仪数据除以16.4          可以转化为带物理单位的数据，单位为：°/s

#define MPU6050_LPF          				(0x06)    																// MPU6050 低通滤波频率
// 设置为:0x01 低通滤波器频率为:188 Hz
// 设置为:0x02 低通滤波器频率为:98  Hz
// 设置为:0x03 低通滤波器频率为:42  Hz
// 设置为:0x04 低通滤波器频率为:20  Hz
// 设置为:0x05 低通滤波器频率为:10  Hz
// 设置为:0x06 低通滤波器频率为:5   Hz

#define MPU6050_SMPLRT_DIV_SET     (0x00)    																  // MPU6050 采样频率分频值
// 设置为:0x00  采样频率为:1kHz       	采样率 = 1kHz / (1 + 0) = 1kHz
// 设置为:0x01  采样频率为:500Hz      	采样率 = 1kHz / (1 + 1) = 500Hz
// 设置为:0x02  采样频率为:333.33Hz   	采样率 = 1kHz / (1 + 2) = 333.33Hz
// 设置为:0x03  采样频率为:250Hz      	采样率 = 1kHz / (1 + 3) = 250Hz
// 设置为:0x04  采样频率为:200Hz      	采样率 = 1kHz / (1 + 4) = 200Hz
// 设置为:0x05  采样频率为:166.67Hz   	采样率 = 1kHz / (1 + 5) = 166.67Hz
// 设置为:0x06  采样频率为:142.86Hz   	采样率 = 1kHz / (1 + 6) = 142.86Hz
// 设置为:0x07  采样频率为:125Hz      	采样率 = 1kHz / (1 + 7) = 125Hz
// 设置为:0x08  采样频率为:111.11Hz   	采样率 = 1kHz / (1 + 8) = 111.11Hz
// 设置为:0x09  采样频率为:100Hz      	采样率 = 1kHz / (1 + 9) = 100Hz

/******************************************************************************/
/*------------------------------------结构体----------------------------------*/
/******************************************************************************/
typedef struct _RRD_DEVICE_MPU6050 {
	void 				(*mpu6050_init)							(void);
	
	uint8_t 		(*mpu6050_read_data)				(const uint8_t reg_add,uint8_t* data_list,const uint8_t num);
	uint8_t 		(*mpu6050_write_data)				(const uint8_t reg_add,uint8_t* data_list,const uint8_t num);

	uint8_t 		(*mpu6050_get_id)						(void);
	void 				(*mpu6050_get_acc)					(int16_t *acc_list);
	void 				(*mpu6050_get_temp)					(int16_t *temp_data);
	void 				(*mpu6050_get_gyro)					(int16_t *gyro_list);

	float 			(*mpu6050_acc_transition)		(int16_t acc_value);
	float 			(*mpu6050_gyro_transition)	(int16_t gyro_value);
	void 				(*mpu6050_temp_transition)	(float *temperature);
	
}RRD_DEVICE_MPU6050;

/******************************************************************************/
/*-----------------------------------外部接口---------------------------------*/
/******************************************************************************/
extern RRD_DEVICE_MPU6050 MPU6050_DEVICE;

/******************************************************************************/
/*-----------------------------------DEBUG接口--------------------------------*/
/******************************************************************************/
#define OPEN_MPU6050_TEST		0
#if OPEN_MPU6050_TEST
	void mpu6050_test(void);
#endif /* \} if OPEN_MPU6050_TEST */
#endif

